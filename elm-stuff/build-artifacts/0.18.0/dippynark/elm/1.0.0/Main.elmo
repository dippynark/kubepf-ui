var _dippynark$elm$Main$castOption = function (cast) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(
				_elm_lang$core$Basics$toString(cast)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(cast)),
			_1: {ctor: '[]'}
		});
};
var _dippynark$elm$Main$displayCast = _elm_lang$core$Native_Platform.outgoingPort(
	'displayCast',
	function (v) {
		return v;
	});
var _dippynark$elm$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'DisplayCast') {
			var _p1 = _p0._0;
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{cast: _p1}),
				_1: _dippynark$elm$Main$displayCast(_p1)
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						casts: A2(_elm_lang$core$String$split, '\n', _p0._0)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _dippynark$elm$Main$Model = F2(
	function (a, b) {
		return {cast: a, casts: b};
	});
var _dippynark$elm$Main$init = {
	ctor: '_Tuple2',
	_0: A2(
		_dippynark$elm$Main$Model,
		'',
		{
			ctor: '::',
			_0: '1',
			_1: {
				ctor: '::',
				_0: '2',
				_1: {ctor: '[]'}
			}
		}),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _dippynark$elm$Main$ListCasts = function (a) {
	return {ctor: 'ListCasts', _0: a};
};
var _dippynark$elm$Main$subscriptions = function (model) {
	return A2(_elm_lang$websocket$WebSocket$listen, 'ws://192.168.1.27:5050/list', _dippynark$elm$Main$ListCasts);
};
var _dippynark$elm$Main$DisplayCast = function (a) {
	return {ctor: 'DisplayCast', _0: a};
};
var _dippynark$elm$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('row'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h2,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-center'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Terminal Sessions'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$select,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_dippynark$elm$Main$DisplayCast),
								_1: {ctor: '[]'}
							},
							A2(_elm_lang$core$List$map, _dippynark$elm$Main$castOption, model.casts)),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('row'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('row'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(model.cast),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _dippynark$elm$Main$main = _elm_lang$html$Html$program(
	{init: _dippynark$elm$Main$init, update: _dippynark$elm$Main$update, subscriptions: _dippynark$elm$Main$subscriptions, view: _dippynark$elm$Main$view})();
